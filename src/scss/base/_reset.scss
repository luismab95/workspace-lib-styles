/**=====================
    1.1 Reset CSS start
==========================**/

.f-light {
  color: $light-txt-color;
}

svg {
  &.f-light {
    fill: $theme-body-sub-title-color;
    opacity: 0.8;
  }
}

.light-card {
  background-color: var(--light-background);
}

.light-background {
  background-color: var(--light-bg);
}

/*====== Padding css starts ======*/
$i: 0;

@while $i<=50 {
  .p-#{$i} {
    padding: #{$i}px;
  }

  $i: $i + 5;
}

/*====== Padding css ends ======*/

/*====== Padding-left css starts ======*/
$i: 0;

@while $i<=50 {
  .p-l-#{$i} {
    padding-left: #{$i}px;
  }

  $i: $i + 5;
}

/*====== Padding-left css ends ======*/

/*====== Padding-top css starts ======*/
$i: 0;

@while $i<=50 {
  .p-t-#{$i} {
    padding-top: #{$i}px !important;
  }

  $i: $i + 5;
}

/*====== Padding-top css ends ======*/

/*====== Padding-bottom css starts ======*/
$i: 0;

@while $i<=50 {
  .p-b-#{$i} {
    padding-bottom: #{$i}px !important;
  }

  $i: $i + 5;
}

/*====== Padding-bottom css ends ======*/

/*====== Padding-right css starts ======*/
$i: 0;

@while $i<=50 {
  .p-r-#{$i} {
    padding-right: #{$i}px;
  }

  $i: $i + 5;
}

/*====== Padding-right css ends ======*/

/*====== Margin css starts ======*/
$i: 0;

@while $i<=50 {
  .m-#{$i} {
    margin: #{$i}px !important;
  }

  $i: $i + 5;
}

/*====== Margin css ends ======*/

/*====== Margin-top css starts ======*/
$i: 0;

@while $i<=50 {
  .m-t-#{$i} {
    margin-top: #{$i}px !important;
  }

  $i: $i + 5;
}

/*====== Margin-top css ends ======*/

/*====== Margin-Bottom css starts ======*/
$i: 0;

@while $i<=50 {
  .m-b-#{$i} {
    margin-bottom: #{$i}px !important;
  }

  $i: $i + 5;
}

/*====== Margin-Bottom css ends ======*/

/*====== Margin-left css starts ======*/
$i: 0;

@while $i<=50 {
  .m-l-#{$i} {
    margin-left: #{$i}px !important;
  }

  $i: $i + 5;
}

/*====== Margin-left css ends ======*/

/*====== Margin-right css starts ======*/
$i: 0;

@while $i<=50 {
  .m-r-#{$i} {
    margin-right: #{$i}px;
  }

  $i: $i + 5;
}

/*====== Margin-right css ends ======*/

/*====== Border-radius css starts ======*/
$i: 0;

@while $i<=35 {
  .b-r-#{$i} {
    border-radius: #{$i}px !important;
  }

  $i: $i + 1;
}

/*====== Border-radius css ends ======*/

/*====== Font-size css starts ======*/
$i: 12;

@while $i<=100 {
  .f-#{$i} {
    font-size: #{$i}px !important;
  }

  $i: $i + 2;
}

/*====== Font-size css ends ======*/

/*====== Font-weight css starts ======*/
$i: 100, 300, 500, 400, 600, 700, 900;

@each $val in $i {
  .f-w-#{$val} {
    font-weight: $val;
  }
}

/*====== Font-weight css ends ======*/

/*====== Font-style css starts ======*/
$i: normal, italic, oblique, initial, inherit;

@each $val in $i {
  .f-s-#{$val} {
    font-style: $val;
  }
}

/*====== Font-style css ends ======*/

/*====== Text-Decoration css starts ======*/

$i: overline, line-through, underline, dashed, blink, dotted, initial, none,
  solid, wavy, inherit, double;

@each $val in $i {
  .text-#{$val} {
    text-decoration: $val;
  }
}

/*====== Text-Decoration css ends ======*/

/*====== Vertical-Align css starts ======*/
$i: baseline, sub, super, top, text-top, middle, bottom, text-bottom, initial,
  inherit;

@each $val in $i {
  .#{$val} {
    vertical-align: $val;
  }
}

/*====== Vertical-Align css ends ======*/

/*====== Position css starts ======*/

$i: static, absolute, fixed, relative, initial, inherit;

@each $val in $i {
  .p-#{$val} {
    position: $val;
  }
}

/*====== Position css ends ======*/

/*====== Float css starts ======*/
$i: left, right, none;

@each $val in $i {
  .f-#{$val} {
    float: $val;
  }
}

/*====== Float css ends ======*/

/*====== Overflow css starts ======*/
$i: hidden, visible, auto;

@each $val in $i {
  .o-#{$val} {
    overflow: $val;
  }
}

/*====== Overflow css ends ======*/

/*====== Image-sizes css starts ======*/
$i: 10;

@while $i<=100 {
  .img-#{$i} {
    width: #{$i}px !important;
  }

  .img-h-#{$i} {
    height: #{$i}px !important;
  }

  $i: $i + 10;
}

/*====== Image-sizes css ends ======*/

/*======= Text css starts ===========*/
$text-name: primary, secondary, success, danger, info, light, dark, warning;
$text-color: $primary-color, $secondary-color, $success-color, $danger-color,
  $info-color, $light-color, $dark-color, $warning-color;

@each $var in $text-name {
  $i: index($text-name, $var);

  .font-#{$var} {
    color: nth($text-color, $i) !important;
  }
}

.font-primary {
  color: var(--theme-deafult) !important;
}

.font-secondary {
  color: var(--theme-secondary) !important;
}

/*======= Text css ends ===========*/

/*======= Label-color css starts  ======= */

.label {
  border-radius: 2px;
  color: $white;
  font-size: 12px;
  line-height: 1;
  margin-bottom: 0;
  text-transform: capitalize;
}

$label-name: theme, primary, secondary, success, danger, info, light, dark,
  warning;
$label-color: $primary-color, $primary-color, $secondary-color, $success-color,
  $danger-color, $info-color, $light-color, $dark-color, $warning-color;

@each $var in $label-name {
  $i: index($label-name, $var);

  .label-#{$var} {
    background-color: nth($label-color, $i);
  }
}

/*======= Label-color css ends  ======= */

/*======= Badge-color css starts  ======= */

$badge-name: primary, secondary, success, danger, info, light, dark, warning;
$badge-color: $primary-color, $secondary-color, $success-color, $danger-color,
  $info-color, $light-color, $dark-color, $warning-color;

@each $var in $badge-name {
  $i: index($badge-name, $var);

  .badge-#{$var} {
    background-color: nth($badge-color, $i);

    @if ($badge-name== "light") {
      color: $theme-body-font-color !important;
    }
  }
}

.badge-primary {
  background-color: var(--theme-deafult) !important;
}

.badge-secondary {
  background-color: var(--theme-secondary) !important;
}

/*======= Badge-color css end  ======= */

/*======= Background-color css starts  ======= */

$background-name: primary, secondary, success, danger, info, light, dark,
  warning;
$background-color: $primary-color, $secondary-color, $success-color,
  $danger-color, $info-color, $light-color, $dark-color, $warning-color;

@each $var in $background-name {
  $i: index($background-name, $var);

  .bg-#{$var} {
    background-color: nth($background-color, $i) !important;
    color: $white;
  }

  .bg-light-#{$var} {
    background-color: rgba(nth($background-color, $i), 0.1) !important;
    color: $white;
  }
  .b-light1-#{$var} {
    background-color: rgba(nth($background-color, $i), 0.07) !important;
  }
}

.bg-primary {
  background-color: var(--theme-deafult) !important;
}

.bg-primary-1 {
  background-color: rgba($primary-color, 0.6);
}
.bg-primary-2 {
  background-color: rgba($primary-color, 0.3);
}

.bg-secondary {
  background-color: var(--theme-secondary) !important;
}

/*======= Background-color css end  ======= */

/*======= Font-color css starts  ======= */

$text-name: primary, secondary, success, danger, info, light, dark, warning,
  google-plus, twitter, linkedin, fb;
$label-color: $primary-color, $secondary-color, $success-color, $danger-color,
  $info-color, $light-color, $dark-color, $warning-color, $google-plus, $twitter,
  $linkedin, $fb;

@each $var in $text-name {
  $i: index($text-name, $var);

  .txt-#{$var} {
    color: nth($label-color, $i) !important;
  }
}

.txt-primary {
  color: var(--theme-deafult) !important;
}

.txt-secondary {
  color: var(--theme-secondary);
}

/*======= Font-color css end  ======= */

/*======= Button-color css starts  ======= */
// btn--color//
@keyframes push {
  50% {
    transform: scale(0.95);
  }

  100% {
    transform: scale(1);
  }
}

@each $btn-name, $btn-color in (primary, $primary-color),
  (secondary, $secondary-color), (success, $success-color),
  (danger, $danger-color), (info, $info-color), (light, $light-color),
  (dark, $dark-color), (warning, $warning-color)
{
  .btn-#{$btn-name} {
    background-color: $btn-color !important;
    border-color: $btn-color !important;
    -webkit-tap-highlight-color: transparent;
    transform: translateZ(0);

    @if ($btn-name== "info") {
      color: $white;

      &:hover,
      &:focus,
      &:active,
      &.active {
        color: $white;
      }
    }

    &.disabled,
    &:disabled {
      background-color: $btn-color !important;
      border-color: $btn-color !important;
    }

    &:focus {
      box-shadow: unset !important;
    }
  }
}

.btn-light {
  background-color: rgba($primary-color, 0.06) !important;
  border-color: rgba($primary-color, 0.06) !important;

  &:hover {
    background-color: rgba($primary-color, 0.1) !important;
    border-color: rgba($primary-color, 0.1) !important;
  }
}

.btn-primary {
  background-color: var(--theme-deafult) !important;
  border-color: var(--theme-deafult) !important;
}

.btn-secondary {
  background-color: var(--theme-secondary);
  border-color: var(--theme-secondary);
}

.btn-hover-effect {
  &:hover {
    animation: push 0.5s linear 1;
  }
}

/*======= Button-color css ends  ======= */
@each $btn-name, $btn-color in (primary, $primary-color),
  (secondary, $secondary-color), (success, $success-color),
  (danger, $danger-color), (info, $info-color), (light, $light-color),
  (dark, $dark-color), (warning, $warning-color)
{
  .btn-outline-#{$btn-name}-2x {
    border-width: 2px;
    border-color: $btn-color;
    color: $btn-color;
    background-color: transparent;

    &:hover,
    &:focus,
    &:active,
    &.active {
      color: white !important;
      background-color: $btn-color !important;
      border-color: $btn-color !important;
      box-shadow: none;
    }
  }
  .btn-outline-light-2x {
    &:hover,
    &:focus,
    &:active,
    &.active {
      color: $theme-body-font-color !important;
    }
  }
}

// outline buttons//
@each $btn-name, $btn-color in (primary, $primary-color),
  (secondary, $secondary-color), (success, $success-color),
  (danger, $danger-color), (info, $info-color), (light, $light-color),
  (dark, $dark-color), (warning, $warning-color)
{
  .btn-check {
    color: $btn-color !important;
    &:checked {
      color: white !important;
      background-color: $btn-color !important;
      + {
        .btn-outline-#{$btn-name} {
          color: white !important;
          background-color: $btn-color !important;
          box-shadow: unset !important;
        }
      }
    }
    + {
      .btn-outline-#{$btn-name} {
        border-color: $btn-color !important;
        color: $btn-color !important;
        background-color: transparent;
        &.disabled {
          color: $btn-color;
        }

        @if ($btn-name== "light") {
          color: $theme-body-font-color;
        }
        &:hover,
        &:focus,
        &:active,
        &:focus-visible,
        &.active {
          color: white !important;
          background-color: $btn-color !important;
          border-color: $btn-color !important;
          box-shadow: none !important;
        }
      }
    }
  }
  .btn-outline-#{$btn-name} {
    border-color: $btn-color;
    color: $btn-color !important;
    background-color: transparent;
    &.disabled {
      color: $btn-color !important;
      border-color: $btn-color;
    }

    @if ($btn-name== "light") {
      color: $theme-body-font-color;
    }
    &:hover,
    &:focus,
    &:active,
    &.active {
      color: $white !important;
      background-color: $btn-color !important;
      border-color: $btn-color !important;
      box-shadow: unset !important;
    }
  }
}

//active button css //

@each $btn-name, $btn-color in (primary, $primary-color),
  (secondary, $secondary-color), (success, $success-color),
  (danger, $danger-color), (info, $info-color), (light, $light-color),
  (dark, $dark-color), (warning, $warning-color)
{
  .btn-#{$btn-name}:not([disabled]):not(.disabled).active {
    background-color: darken($btn-color, 10%);
    color: $white !important;
    border-color: darken($btn-color, 10%);
    box-shadow: none !important;

    &:hover,
    &:focus,
    &:active,
    &.active {
      color: white;
      background-color: darken($btn-color, 10%);
      border-color: darken($btn-color, 10%);
    }
  }
}

//* active button css end *//

@each $btn-name, $btn-color in (primary, $primary-color),
  (secondary, $secondary-color), (success, $success-color),
  (danger, $danger-color), (info, $info-color), (light, $light-color),
  (dark, $dark-color), (warning, $warning-color)
{
  .btn-outline-#{$btn-name}-2x:not([disabled]):not(.disabled).active {
    background-color: $btn-color;
    border-color: $btn-color;
    box-shadow: none !important;
    color: $white;

    &:hover,
    &:focus,
    &:active,
    &.active {
      color: $white !important ;
      box-shadow: none !important;
      background-color: $btn-color !important;
      border-color: $btn-color !important;
    }
  }
}

/*======= Table-Border-Bottom-color css starts  ======= */

$border-name: primary, secondary, success, danger, info, light, dark, warning;
$border-color: $primary-color, $secondary-color, $success-color, $danger-color,
  $info-color, $light-color, $dark-color, $warning-color;

@each $var in $border-name {
  $i: index($border-name, $var);

  table thead .border-bottom-#{$var} th,
  table tbody .border-bottom-#{$var} th,
  table tbody .border-bottom-#{$var} td {
    border-bottom: 1px solid nth($border-color, $i) !important;
  }
}

/*======= Table-Border-Bottom-color css ends  ======= */

/*======= Table styling css starts  ======= */

$table-name: primary, secondary, success, danger, info, light, dark, warning;
$table-color: $primary-color, $secondary-color, $success-color, $danger-color,
  $info-color, $light-color, $dark-color, $warning-color;

@each $var in $table-name {
  $i: index($table-name, $var);

  .table-styling .table-#{$var},
  .table-styling.table-#{$var} {
    background-color: nth($border-color, $i);
    color: $white;
    border: 3px solid nth($border-color, $i);

    thead {
      background-color: darken(nth($border-color, $i), 10%);
      border: 3px solid darken(nth($border-color, $i), 10%);
    }

    th,
    td {
      background-color: transparent;
    }
  }
}

/*======= Table styling css ends  ======= */

/*======= Svg stroke css start  ======= */
$stroke-name: primary, secondary, success, danger, info, light, dark, warning;
$stroke-color: $primary-color, $secondary-color, $success-color, $danger-color,
  $info-color, $light-color, $dark-color, $warning-color;

@each $var in $stroke-name {
  $i: index($stroke-name, $var);

  .stroke-#{$var} {
    stroke: nth($stroke-color, $i) !important;
  }
}

/*======= Svg stroke css end  ======= */

/*======= All-Borders-color css starts  ======= */

$b-name: primary, secondary, success, danger, info, light, dark, warning;
$b-color: $primary-color, $secondary-color, $success-color, $danger-color,
  $info-color, $light-color, $dark-color, $warning-color;

@each $var in $b-name {
  $i: index($b-name, $var);

  .b-#{$var} {
    border: 1px solid nth($b-color, $i) !important;
  }

  .b-t-#{$var} {
    border-top: 1px solid nth($b-color, $i) !important;
  }

  .border-t-#{$var} {
    border-top: 1px solid nth($b-color, $i) !important;
  }

  .b-b-#{$var} {
    border-bottom: 1px solid nth($b-color, $i) !important;
  }

  .border-b-#{$var} {
    border-bottom: 1px solid nth($b-color, $i) !important;
  }

  .b-l-#{$var} {
    border-left: 1px solid nth($b-color, $i) !important;
  }

  .border-l-#{$var} {
    border-left: 1px solid nth($b-color, $i) !important;
  }

  .b-r-#{$var} {
    border-right: 1px solid nth($b-color, $i) !important;
  }

  .border-r-#{$var} {
    border-right: 1px solid nth($b-color, $i) !important;
  }
}

/*======= All-Borders-color css ends  ======= */

/*====== Border width css starts ======*/
$i: 1;

@while $i<=10 {
  .border-#{$i} {
    border-width: #{$i}px !important;
  }

  $i: $i + 1;
}

/*====== Border width css ends ======*/

.map-js-height {
  height: 500px;
}

/**====== custom scrollbar css start ======**/
.custom-scrollbar,
.datatable-container {
  &::-webkit-scrollbar-track {
    -webkit-box-shadow: inset 0 0 6px $light-gray;
  }

  &::-webkit-scrollbar {
    width: 2px;
    height: 5px;
  }

  &::-webkit-scrollbar-thumb {
    background-color: rgba($primary-color, 0.3);
  }
}
.theme-scrollbar {
  &::-webkit-scrollbar-track {
    -webkit-box-shadow: inset 0 0 6px $light-gray;
  }

  &::-webkit-scrollbar {
    width: 0px;
    height: 5px;
  }

  &::-webkit-scrollbar-thumb {
    background-color: rgba($primary-color, 0.3) !important;
  }
}

/**====== Custom scrollbar css end ======**/

.primary {
  .svg-fill {
    fill: var(--theme-deafult);

    &:not(.half-circle) {
      stroke: var(--theme-deafult);
    }
  }

  .bg-gradient {
    background-image: linear-gradient(
      144.16deg,
      rgba($primary-color, 0.1) 19.06%,
      rgba($primary-color, 0) 79.03%
    ) !important;
  }
}

.secondary {
  .svg-fill {
    fill: var(--theme-secondary);

    &:not(.half-circle) {
      stroke: var(--theme-secondary);
    }
  }

  .bg-gradient {
    background-image: linear-gradient(
      144.16deg,
      rgba($secondary-color, 0.1) 19.06%,
      rgba($secondary-color, 0) 79.03%
    ) !important;
  }
}

.success {
  .svg-fill {
    fill: $success-color;
  }

  .bg-gradient {
    background-image: linear-gradient(
      144.16deg,
      rgba($success-color, 0.1) 19.06%,
      rgba($success-color, 0) 79.03%
    ) !important;
  }
}

.warning {
  .svg-fill {
    fill: $warning-color;
  }

  .bg-gradient {
    background-image: linear-gradient(
      144.16deg,
      rgba($warning-color, 0.1) 19.06%,
      rgba($warning-color, 0) 79.03%
    ) !important;
  }
}

.dotted {
  border-style: dotted;
}

.dashed {
  border-style: dashed;
}

.double {
  border-style: double;
}

.groove {
  border-style: groove;
}

.ridge {
  border-style: ridge;
}

.inset {
  border-style: inset;
}

.outset {
  border-style: outset;
}

@keyframes fadeIncustom {
  0% {
    opacity: 0;
    top: 50px;
  }

  75% {
    opacity: 0.6;
    top: 0;
  }

  100% {
    opacity: 1;
  }
}

// common css
.common-flex {
  display: flex;
  gap: 12px;
  flex-wrap: wrap;
}

.common-space {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

/*======= light-color ======= */
.bg-primary-light {
  background-color: rgba($primary-light-color, 0.3);
}
.bg-secondary-light {
  background-color: rgba($secondary-light-color, 0.3);
}
.bg-warning-light {
  background-color: rgba($warning-light-color, 0.3);
}

.bg-danger-light {
  background-color: rgba($danger-light-color, 0.3);
}
.bg-light-light {
  background-color: rgba($light-light-color, 0.3) !important;
}
.bg-success-light {
  background-color: rgba($success-color, 0.3) !important;
}

/*======= light-color ======= */

//badge
@each $badge-light-name, $badge-light-color in (primary, $primary-color),
  (secondary, $secondary-color), (success, $success-color),
  (danger, $danger-color), (info, $info-color), (light, $badge-light-color),
  (dark, $dark-color), (warning, $warning-color)
{
  .badge-light-#{$badge-light-name} {
    background-color: lighten($badge-light-color, 38%);
    color: $badge-light-color;
  }
}

.badge-light-light {
  background-color: lighten($badge-light-color, 55%);
}

.badge-light-primary {
  background-color: rgba($primary-color, 0.1);
}

.badge-light-success {
  background-color: rgba($success-color, 0.15);
}

.badge-light-danger {
  background-color: rgba($danger-color, 0.3);
}

.badge-light-info {
  background-color: rgba($info-color, 0.3);
}

.badge-light-secondary {
  background-color: rgba($secondary-color, 0.08);
}

// select2
.badge-light-warning {
  background-color: rgba($warning-color, 0.1);
}

.page-link {
  color: var(--body-font-color);
  &.active {
    z-index: 3;
    color: $primary-color;
    background-color: rgba($primary-color, 0.3);
  }
}
.active {
  > .page-link {
    z-index: 3;
    color: $white;
    background-color: $primary-color !important;
    border-color: $light-color !important;
  }
}

.br-horizontal .br-unit-inner {
  background-color: $primary-color !important;
}
.br-movie .br-unit-inner,
.br-square .br-unit-inner,
.br-vertical .br-unit-inner {
  background-color: $primary-color !important;
  border-color: transparent !important;
}
.br-horizontal .br-text,
.br-movie .br-text,
.br-vertical .br-text {
  color: $primary-color !important;
}
.ngb-dp-content {
  ngb-datepicker-month {
    background-color: var(--white);
  }
}

.dataTables_wrapper {
  table.dataTable {
    thead {
      th {
        border-right: 2px solid $light-semi-gray;
      }
      td {
        border-right: 2px solid $light-semi-gray;
      }
    }
  }
}

/**=====================
    1.1 Reset CSS Ends
==========================**/
